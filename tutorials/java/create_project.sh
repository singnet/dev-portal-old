#!/bin/bash

if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ] || [ -z "$4" ]
  then
    echo "Invalid arguments: ./create_project.sh PROJECT_NAME ORGANIZATION_ID SERVICE_ID SERVICE_PORT"
    exit 1
fi

PROJECT_NAME=$1
ORGANIZATION_ID=$2
SERVICE_ID=$3
SERVICE_PORT=$4

TEMPLATE_DIR=template
SRC_DIR=$PROJECT_NAME/src
BIN_DIR=$PROJECT_NAME/bin
LIBS_DIR=$PROJECT_NAME/libs
RESOURCE_DIR=$SRC_DIR/main/resources
META_INF_DIR=$RESOURCE_DIR/META-INF
PROTO_DIR=$SRC_DIR/main/java/service_spec
PROTO_FILE=$PROTO_DIR/$PROJECT_NAME.proto
PROTO_SED_DIR=$(echo src/main/java/service_spec | sed 's_/_\\/_g')
SERVER_JAVA_FILE=$SRC_DIR/main/java/JavaServer.java
CLIENT_JAVA_FILE=$SRC_DIR/main/java/JavaClient.java
SERVER_MANIFEST_FILE=$META_INF_DIR/SERVER_MANIFEST.MF
CLIENT_MANIFEST_FILE=$META_INF_DIR/CLIENT_MANIFEST.MF
BUILD_SCRIPT_FILE=$PROJECT_NAME/build.sh
FETCH_DEPENDENCIES_FILE=$PROJECT_NAME/fetch_dependencies.sh
DAEMON_CONFIG_DIRNAME=config
DAEMON_CONFIG_FILENAME=snetd.config.json
DAEMON_CONFIG_DIR=$PROJECT_NAME/$DAEMON_CONFIG_DIRNAME
DAEMON_CONFIG_FILE=$DAEMON_CONFIG_DIR/$DAEMON_CONFIG_FILENAME
START_SERVICE_SCRIPT_FILE=$PROJECT_NAME/publishAndStartService.sh
CLIENT_OPEN_CHANNEL_SCRIPT_FILENAME=openChannel.sh
CLIENT_OPEN_CHANNEL_SCRIPT_FILE=$PROJECT_NAME/$CLIENT_OPEN_CHANNEL_SCRIPT_FILENAME
CLIENT_TEST_SCRIPT_FILENAME=testServiceRequest.sh
CLIENT_TEST_SCRIPT_FILE=$PROJECT_NAME/$CLIENT_TEST_SCRIPT_FILENAME

TEMPLATE_PROTO=$TEMPLATE_DIR/proto.template.proto
TEMPLATE_BUILD_SCRIPT=$TEMPLATE_DIR/build.template.sh
TEMPLATE_SERVER=$TEMPLATE_DIR/server.template.java
TEMPLATE_SERVER_MANIFEST=$TEMPLATE_DIR/server_manifest.template.MF
TEMPLATE_CLIENT=$TEMPLATE_DIR/client.template.java
TEMPLATE_CLIENT_MANIFEST=$TEMPLATE_DIR/client_manifest.template.MF
TEMPLATE_DAEMON_CONFIG_FILE=$TEMPLATE_DIR/daemonConfigFile.template.json
TEMPLATE_START_SERVICE_SCRIPT=$TEMPLATE_DIR/publishAndStartService.template.sh
TEMPLATE_OPEN_CHANNEL_SCRIPT=$TEMPLATE_DIR/openChannel.template.sh
TEMPLATE_CLIENT_TEST_SCRIPT=$TEMPLATE_DIR/testService.template.sh
TEMPLATE_FETCH_DEPENDENCIES_SCRIPT=$TEMPLATE_DIR/fetch_dependencies.template.sh

PROJECT_TAG=__PROJECT__
SERVICE_PORT_TAG=__SERVICE_PORT__
SERVICE_ID_TAG=__SERVICE_ID__
ORGANIZATION_ID_TAG=__ORGANIZATION_ID__
PROTO_DIR_TAG=__PROTO_DIR__
DAEMON_CONFIG_FILE_TAG=__DAEMON_CONFIG_FILE__

if [ -d "$PROJECT_NAME" ] || [ -f $PROJECT_NAME ]; then
    echo "ERROR: $PROJECT_NAME already exists"
    exit 1
fi

mkdir -p $PROTO_DIR
mkdir -p $SRC_DIR
mkdir -p $BIN_DIR
mkdir -p $LIBS_DIR
mkdir -p $META_INF_DIR
mkdir -p $DAEMON_CONFIG_DIR

cat $TEMPLATE_PROTO | sed "s/$PROJECT_TAG/$PROJECT_NAME/g" > $PROTO_FILE
cat $TEMPLATE_BUILD_SCRIPT > $BUILD_SCRIPT_FILE
cat $TEMPLATE_SERVER | sed "s/$PROJECT_TAG/$PROJECT_NAME/g" | sed "s/$SERVICE_PORT_TAG/$SERVICE_PORT/g" > $SERVER_JAVA_FILE
cat $TEMPLATE_CLIENT | sed "s/$PROJECT_TAG/$PROJECT_NAME/g" | sed "s/$SERVICE_PORT_TAG/$SERVICE_PORT/g" > $CLIENT_JAVA_FILE
cat $TEMPLATE_SERVER_MANIFEST > $SERVER_MANIFEST_FILE
cat $TEMPLATE_CLIENT_MANIFEST > $CLIENT_MANIFEST_FILE
cat $TEMPLATE_DAEMON_CONFIG_FILE | sed "s/$ORGANIZATION_ID_TAG/$ORGANIZATION_ID/g" | sed "s/$SERVICE_ID_TAG/$SERVICE_ID/g" | sed "s/$SERVICE_PORT_TAG/$SERVICE_PORT/g" > $DAEMON_CONFIG_FILE
cat $TEMPLATE_OPEN_CHANNEL_SCRIPT | sed "s/$ORGANIZATION_ID_TAG/$ORGANIZATION_ID/g" | sed "s/$SERVICE_ID_TAG/$SERVICE_ID/g" > $CLIENT_OPEN_CHANNEL_SCRIPT_FILE
cat $TEMPLATE_START_SERVICE_SCRIPT | sed "s/$ORGANIZATION_ID_TAG/$ORGANIZATION_ID/g" | sed "s/$SERVICE_ID_TAG/$SERVICE_ID/g" | sed "s/$PROTO_DIR_TAG/$PROTO_SED_DIR/g" | sed "s/$DAEMON_CONFIG_FILE_TAG/$DAEMON_CONFIG_DIRNAME\/$DAEMON_CONFIG_FILENAME/g" > $START_SERVICE_SCRIPT_FILE
cat $TEMPLATE_CLIENT_TEST_SCRIPT | sed "s/$ORGANIZATION_ID_TAG/$ORGANIZATION_ID/g" | sed "s/$SERVICE_ID_TAG/$SERVICE_ID/g" > $CLIENT_TEST_SCRIPT_FILE
cat $TEMPLATE_FETCH_DEPENDENCIES_SCRIPT > $FETCH_DEPENDENCIES_FILE

chmod 755 $START_SERVICE_SCRIPT_FILE
chmod 755 $CLIENT_OPEN_CHANNEL_SCRIPT_FILE
chmod 755 $CLIENT_TEST_SCRIPT_FILE
chmod 755 $BUILD_SCRIPT_FILE

cd $PROJECT_NAME
cd libs
sh ../fetch_dependencies.sh
cd ..
